version: '3'

services:
  # APP {DJANGO}
  notedapp:
    build: 
      context: .
      dockerfile: Dockerfile
    env_file: .env
    environment:
      - IP=https://8000-${GITPOD_WORKSPACE_ID}.${GITPOD_WORKSPACE_CLUSTER_HOST}
      - SECRET_KEY=wW/7]>=pHRX>[69.c{v4K`O;<5r.<>T7&l'A\p%b0(_M4xtd8P}qHX":s!"n<`jvp5P
      - DATABASE_NAME=postgres
      - DATABASE_USER=postgres
      - DATABASE_PASSWORD=postgres
      - DATABASE_HOST=postgres
      - DATABASE_PORT=5432
      # - EMAIL_HOST_USER=
      # - EMAIL_HOST_PASSWORD=
      # - YANDEX_ID=
      # - YANDEX_SECRET=
      # - GITHUB_ID=
      # - GITHUB_SECRET=
      # - ADMIN_NAME=
      # - ADMIN_EMAIL=
      # - TELEGRAM_BOT_TOKEN=
      # - REDIS_LOCATION=
    volumes:
      - ./:/noted/frontend
    ports:
      - "80:8000"
    networks:
      - noted-network

# DATABASE {POSTGRESQL}
  db:
    image: postgres:13
    container_name: postgres
    env_file:
      - .env
    environment:
      # - POSTGRES_HOST="${DATABASE_HOST}"
      - POSTGRES_USER=postgres
      # - POSTGRES_PORT="${DATABASE_PORT}"
      - POSTGRES_DB=postgres
      - POSTGRES_PASSWORD=postgres
    volumes:
      - db:/var/lib/postgresql/data
    ports:
      - 5432
    networks:
      - noted-network
    healthcheck:
      test: [ "CMD", "pg_isready", "-q", "-d", "${DATABASE_NAME}", "-U", "${DATABASE_USER}" ]
      retries: 3
      timeout: 5s

  # CACHING
  redis:
    image: redis
    container_name: redis
    ports:
      - 6379
    networks:
      - noted-network
    depends_on:
      - db

# NETWORK AND DRIVERS
networks:
  noted-network:
    driver: bridge

volumes:
  db: